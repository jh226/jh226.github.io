{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JIRANDAATA\\\\Desktop\\\\portfolio\\\\src\\\\layout\\\\DotNav.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './DotNav.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sections = ['home', 'aboutMe', 'project'];\nfunction DotNav() {\n  _s();\n  const [activeSection, setActiveSection] = useState('home');\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setActiveSection(entry.target.id);\n        }\n      });\n    }, {\n      threshold: 0.6 // 60% 보이면 해당 섹션으로 인식\n    });\n    sections.forEach(id => {\n      const el = document.getElementById(id);\n      if (el) observer.observe(el);\n    });\n    return () => observer.disconnect();\n  }, []);\n  const handleScroll = id => {\n    const el = document.getElementById(id);\n    if (el) el.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dot-nav\",\n    children: sections.map(id => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dot ${activeSection === id ? 'active' : ''}`,\n      onClick: () => handleScroll(id)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(DotNav, \"65M0EpCty5hXphTge5SPn9c/pY8=\");\n_c = DotNav;\nexport default DotNav;\nvar _c;\n$RefreshReg$(_c, \"DotNav\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","sections","DotNav","_s","activeSection","setActiveSection","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","id","threshold","el","document","getElementById","observe","disconnect","handleScroll","scrollIntoView","behavior","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/JIRANDAATA/Desktop/portfolio/src/layout/DotNav.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './DotNav.css';\r\n\r\nconst sections = ['home', 'aboutMe', 'project'];\r\n\r\nfunction DotNav() {\r\n  const [activeSection, setActiveSection] = useState('home');\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            setActiveSection(entry.target.id);\r\n          }\r\n        });\r\n      },\r\n      {\r\n        threshold: 0.6, // 60% 보이면 해당 섹션으로 인식\r\n      }\r\n    );\r\n\r\n    sections.forEach((id) => {\r\n      const el = document.getElementById(id);\r\n      if (el) observer.observe(el);\r\n    });\r\n\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  const handleScroll = (id) => {\r\n    const el = document.getElementById(id);\r\n    if (el) el.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dot-nav\">\r\n      {sections.map((id) => (\r\n        <div\r\n          key={id}\r\n          className={`dot ${activeSection === id ? 'active' : ''}`}\r\n          onClick={() => handleScroll(id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DotNav;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,QAAQ,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC;AAE/C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACXA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxBN,gBAAgB,CAACK,KAAK,CAACE,MAAM,CAACC,EAAE,CAAC;QACnC;MACF,CAAC,CAAC;IACJ,CAAC,EACD;MACEC,SAAS,EAAE,GAAG,CAAE;IAClB,CACF,CAAC;IAEDb,QAAQ,CAACQ,OAAO,CAAEI,EAAE,IAAK;MACvB,MAAME,EAAE,GAAGC,QAAQ,CAACC,cAAc,CAACJ,EAAE,CAAC;MACtC,IAAIE,EAAE,EAAET,QAAQ,CAACY,OAAO,CAACH,EAAE,CAAC;IAC9B,CAAC,CAAC;IAEF,OAAO,MAAMT,QAAQ,CAACa,UAAU,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIP,EAAE,IAAK;IAC3B,MAAME,EAAE,GAAGC,QAAQ,CAACC,cAAc,CAACJ,EAAE,CAAC;IACtC,IAAIE,EAAE,EAAEA,EAAE,CAACM,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EACnD,CAAC;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,SAAS;IAAAC,QAAA,EACrBvB,QAAQ,CAACwB,GAAG,CAAEZ,EAAE,iBACfb,OAAA;MAEEuB,SAAS,EAAE,OAAOnB,aAAa,KAAKS,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAG;MACzDa,OAAO,EAAEA,CAAA,KAAMN,YAAY,CAACP,EAAE;IAAE,GAF3BA,EAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGR,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC3B,EAAA,CAzCQD,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AA2Cf,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}